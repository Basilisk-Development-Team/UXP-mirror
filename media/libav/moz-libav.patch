diff --git a/media/libav/libavutil/internal.h b/media/libav/libavutil/internal.h
index aed9925..03ee543 100644
--- a/media/libav/libavutil/internal.h
+++ b/media/libav/libavutil/internal.h
@@ -134,7 +134,7 @@
 
 #include "libm.h"
 
-#if defined(_MSC_VER)
+#if defined(_MSC_VER) && _MSC_VER < 1800
 #pragma comment(linker, "/include:"EXTERN_PREFIX"avpriv_strtod")
 #pragma comment(linker, "/include:"EXTERN_PREFIX"avpriv_snprintf")
 #endif

diff --git a/media/libav/libavcodec/fft_template.c b/media/libav/libavcodec/fft_template.c
index 808f317c1..9d21ffa6b 100644
--- a/media/libav/libavcodec/fft_template.c
+++ b/media/libav/libavcodec/fft_template.c
@@ -158,14 +158,25 @@ av_cold int ff_fft_init(FFTContext *s, int nbits, int inverse)
 #endif

 #if FFT_FLOAT
-    if (ARCH_AARCH64) ff_fft_init_aarch64(s);
-    if (ARCH_ARM)     ff_fft_init_arm(s);
-    if (ARCH_PPC)     ff_fft_init_ppc(s);
-    if (ARCH_X86)     ff_fft_init_x86(s);
-    if (CONFIG_MDCT)  s->mdct_calcw = s->mdct_calc;
+    #if ARCH_AARCH64 == 1
+        ff_fft_init_aarch64(s);
+    #elif ARCH_ARM == 1
+        ff_fft_init_arm(s);
+    #elif ARCH_PPC == 1
+        ff_fft_init_ppc(s);
+    #elif ARCH_X86 == 1
+        ff_fft_init_x86(s);
+    #endif
+    #if CONFIG_MDCT
+        s->mdct_calcw = s->mdct_calc;
+    #endif
 #else
-    if (CONFIG_MDCT)  s->mdct_calcw = ff_mdct_calcw_c;
-    if (ARCH_ARM)     ff_fft_fixed_init_arm(s);
+    #if CONFIG_MDCT
+        s->mdct_calcw = ff_mdct_calcw_c;
+    #endif
+    #if ARCH_ARM == 1
+        ff_fft_fixed_init_arm(s);
+    #endif
 #endif

     for(j=4; j<=nbits; j++) {
diff --git a/media/libav/libavutil/cpu.c b/media/libav/libavutil/cpu.c
index 354d21e76..6d100e95c 100644
--- a/media/libav/libavutil/cpu.c
+++ b/media/libav/libavutil/cpu.c
@@ -51,14 +51,15 @@ int av_get_cpu_flags(void)
     if (checked)
         return flags;

-    if (ARCH_AARCH64)
+    #if ARCH_AARCH64 == 1
         flags = ff_get_cpu_flags_aarch64();
-    if (ARCH_ARM)
+    #elif ARCH_ARM == 1
         flags = ff_get_cpu_flags_arm();
-    if (ARCH_PPC)
+    #elif ARCH_PPC == 1
         flags = ff_get_cpu_flags_ppc();
-    if (ARCH_X86)
+    #elif ARCH_X86 == 1
         flags = ff_get_cpu_flags_x86();
+    #endif

     flags  &= cpuflags_mask;
     checked = 1;